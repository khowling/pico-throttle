
# Built-in controller = SSD1306
# https://www.winstar.com.tw/products/oled-module/graphic-oled-display/4-pin-oled.html
import ssd1306

import machine
import framebuf
import utime



## Generated from 'Fontforge' Exported as ' C FontForge'
# 32, 52
digits = [{
    'x': 32, 'y':52,
    'b': bytearray(b"\x00\x01\x00\x00\x00\x3f\xfc\x00\x00\xff\xff\x00\x01\xff\xff\x80\x07\xff\xff\xe0\x0f\xff\xff\xe0\x0f\xf0\x1f\xf0\x1f\xe0\x07\xf8\x3f\xc0\x03\xf8\x3f\x80\x01\xfc\x3f\x00\x00\xfc\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7e\x00\x00\x7e\x7e\x00\x00\x7e\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\x7e\x00\x00\x7e\x7e\x00\x00\x7e\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x3f\x00\x00\xfc\x3f\x80\x01\xfc\x3f\xc0\x03\xfc\x1f\xe0\x07\xf8\x0f\xf0\x0f\xf0\x0f\xff\xff\xf0\x07\xff\xff\xe0\x01\xff\xff\xc0\x00\xff\xff\x00\x00\x3f\xfc\x00\x00\x01\x00\x00")
    
},{
    'x': 22, 'y': 50,
    'b': bytearray(b"\x00\x1e\x00\x03\xfe\x00\x7f\xfe\x00\xff\xfe\x00\xff\xfe\x00\xff\xfe\x00\xff\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x00\xfe\x00\x7f\xff\xf8\xff\xff\xfc\xff\xff\xfc\xff\xff\xfc\xff\xff\xfc")
},{
    'x': 33, 'y': 51,
    'b': bytearray(b"\x00\x01\x00\x00\x00\x00\x7f\xfc\x00\x00\x01\xff\xff\x00\x00\x07\xff\xff\xc0\x00\x0f\xff\xff\xe0\x00\x1f\xff\xff\xf0\x00\x3f\xf0\x1f\xf8\x00\x3f\xc0\x07\xf8\x00\x7f\x80\x03\xfc\x00\x7f\x00\x01\xfc\x00\xfe\x00\x01\xfc\x00\xfe\x00\x00\xfe\x00\xfc\x00\x00\xfe\x00\xfc\x00\x00\xfe\x00\xfc\x00\x00\xfe\x00\xfc\x00\x00\xfe\x00\x00\x00\x00\xfe\x00\x00\x00\x00\xfc\x00\x00\x00\x01\xfc\x00\x00\x00\x01\xfc\x00\x00\x00\x01\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x07\xf0\x00\x00\x00\x07\xf0\x00\x00\x00\x0f\xe0\x00\x00\x00\x1f\xe0\x00\x00\x00\x3f\xc0\x00\x00\x00\x7f\x80\x00\x00\x00\xff\x00\x00\x00\x00\xfe\x00\x00\x00\x01\xfc\x00\x00\x00\x03\xfc\x00\x00\x00\x07\xf8\x00\x00\x00\x0f\xf0\x00\x00\x00\x1f\xe0\x00\x00\x00\x3f\xc0\x00\x00\x00\x7f\x80\x00\x00\x00\xff\x00\x00\x00\x01\xfe\x00\x00\x00\x03\xfc\x00\x00\x00\x03\xf8\x00\x1f\x80\x07\xf0\x00\x1f\x80\x0f\xe0\x00\x1f\x80\x1f\xe0\x00\x3f\x80\x3f\xc0\x00\x3f\x80\x7f\x80\x00\x3f\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80")
},{
    'x':31,'y':52,
    'b': bytearray(b"\x00\x01\x00\x00\x00\x7f\xfc\x00\x01\xff\xff\x00\x07\xff\xff\x80\x0f\xff\xff\xc0\x1f\xff\xff\xe0\x3f\xe0\x1f\xf0\x7f\xc0\x07\xf8\x7f\x00\x03\xf8\x7f\x00\x03\xfc\xfe\x00\x01\xfc\xfe\x00\x01\xfc\xfe\x00\x01\xfc\xfc\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x01\xf8\x00\x00\x03\xf8\x00\x00\x03\xf0\x00\x00\x0f\xf0\x00\x00\x7f\xe0\x00\x7f\xff\xc0\x00\x7f\xff\x00\x00\x7f\xff\x00\x00\x7f\xff\xc0\x00\x7f\xff\xe0\x00\x00\x1f\xf0\x00\x00\x07\xf8\x00\x00\x03\xf8\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\xfc\x00\x00\xfe\xfc\x00\x00\xfe\xfc\x00\x00\xfe\xfe\x00\x01\xfc\xfe\x00\x01\xfc\x7f\x00\x03\xfc\x7f\x80\x07\xf8\x3f\xe0\x1f\xf0\x1f\xff\xff\xf0\x1f\xff\xff\xe0\x07\xff\xff\x80\x03\xff\xff\x00\x00\x7f\xfc\x00\x00\x03\x00\x00")
},{
    'x':36, 'y':50,
    'b': bytearray(b"\x00\x00\x03\xf8\x00\x00\x00\x07\xf8\x00\x00\x00\x0f\xf8\x00\x00\x00\x0f\xf8\x00\x00\x00\x1f\xf8\x00\x00\x00\x1f\xf8\x00\x00\x00\x3f\xf8\x00\x00\x00\x7f\xf8\x00\x00\x00\x7f\xf8\x00\x00\x00\xff\xf8\x00\x00\x01\xff\xf8\x00\x00\x01\xff\xf8\x00\x00\x03\xfb\xf8\x00\x00\x07\xf3\xf8\x00\x00\x07\xf3\xf8\x00\x00\x0f\xe3\xf8\x00\x00\x0f\xc3\xf8\x00\x00\x1f\xc3\xf8\x00\x00\x3f\x83\xf8\x00\x00\x3f\x03\xf8\x00\x00\x7f\x03\xf8\x00\x00\xfe\x03\xf8\x00\x00\xfc\x03\xf8\x00\x01\xfc\x03\xf8\x00\x03\xf8\x03\xf8\x00\x03\xf0\x03\xf8\x00\x07\xf0\x03\xf8\x00\x07\xe0\x03\xf8\x00\x0f\xc0\x03\xf8\x00\x1f\xc0\x03\xf8\x00\x1f\x80\x03\xf8\x00\x3f\x00\x03\xf8\x00\x7f\x00\x03\xf8\x00\x7f\xff\xff\xff\xf0\xff\xff\xff\xff\xf0\xff\xff\xff\xff\xf0\xff\xff\xff\xff\xf0\xff\xff\xff\xff\xf0\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x3f\xff\xc0\x00\x00\x7f\xff\xe0\x00\x00\x7f\xff\xe0\x00\x00\x7f\xff\xe0\x00\x00\x7f\xff\xe0")
},{
    'x': 31, 'y': 51,
    'b': bytearray(b"\x0f\xff\xff\xfc\x0f\xff\xff\xfc\x1f\xff\xff\xfc\x1f\xff\xff\xfc\x1f\xff\xff\xfc\x1f\xff\xff\xfc\x1f\x80\x00\xfc\x1f\x80\x00\x7c\x1f\x80\x00\x7c\x1f\x80\x00\x7c\x1f\x80\x00\x00\x1f\x80\x00\x00\x3f\x80\x00\x00\x3f\x80\x00\x00\x3f\x80\x00\x00\x3f\x00\x00\x00\x3f\x00\x00\x00\x3f\x0f\xf0\x00\x3f\x3f\xfe\x00\x3f\xff\xff\x00\x3f\xff\xff\xc0\x7f\xff\xff\xe0\x7f\xff\xff\xe0\x7f\xe0\x3f\xf0\x7f\x80\x0f\xf8\x7f\x00\x07\xf8\x7e\x00\x03\xf8\x3e\x00\x03\xfc\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x00\xfc\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfc\xfc\x00\x01\xfc\xfe\x00\x01\xfc\xfe\x00\x01\xfc\x7e\x00\x03\xfc\x7f\x00\x03\xf8\x7f\x00\x07\xf8\x3f\x80\x0f\xf0\x3f\xe0\x1f\xf0\x1f\xff\xff\xe0\x0f\xff\xff\xc0\x07\xff\xff\x80\x03\xff\xfe\x00\x00\x7f\xf8\x00\x00\x02\x00\x00")
},{
    'x': 32, 'y':51,
    'b': bytearray(b"\x00\x00\x20\x00\x00\x07\xff\x80\x00\x3f\xff\xf0\x00\x7f\xff\xf0\x01\xff\xff\xe0\x03\xff\xff\xe0\x07\xfe\x00\xe0\x07\xf8\x00\x20\x0f\xe0\x00\x00\x1f\xc0\x00\x00\x1f\xc0\x00\x00\x3f\x80\x00\x00\x3f\x80\x00\x00\x3f\x00\x00\x00\x7f\x00\x00\x00\x7f\x00\x00\x00\x7e\x00\x00\x00\x7e\x03\xfc\x00\x7e\x1f\xff\x00\xfe\x7f\xff\xc0\xfe\xff\xff\xe0\xff\xff\xff\xf0\xff\xf8\x1f\xf8\xff\xe0\x07\xfc\xff\x80\x03\xfc\xff\x00\x01\xfe\xfe\x00\x00\xfe\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x3f\xfe\x00\x00\x3f\xfe\x00\x00\x3f\xfe\x00\x00\x3f\xfe\x00\x00\x3f\x7e\x00\x00\x3f\x7e\x00\x00\x7f\x7f\x00\x00\x7f\x7f\x00\x00\x7f\x3f\x80\x00\xfe\x3f\x80\x00\xfe\x3f\xc0\x01\xfe\x1f\xe0\x01\xfc\x0f\xf0\x03\xfc\x0f\xfc\x0f\xf8\x07\xff\xff\xf0\x03\xff\xff\xe0\x01\xff\xff\xc0\x00\x7f\xff\x80\x00\x1f\xfe\x00\x00\x00\xc0\x00")
},
{
    'x': 33, 'y': 50,
    'b': bytearray(b"\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xff\xff\xff\xff\x80\xfc\x00\x00\x3f\x80\xfc\x00\x00\x3f\x00\xfc\x00\x00\x7f\x00\xfc\x00\x00\xfe\x00\xf8\x00\x01\xfc\x00\xf8\x00\x01\xf8\x00\x00\x00\x03\xf0\x00\x00\x00\x07\xf0\x00\x00\x00\x07\xe0\x00\x00\x00\x0f\xc0\x00\x00\x00\x1f\xc0\x00\x00\x00\x1f\x80\x00\x00\x00\x3f\x00\x00\x00\x00\x3f\x00\x00\x00\x00\x7e\x00\x00\x00\x00\x7e\x00\x00\x00\x00\xfc\x00\x00\x00\x00\xfc\x00\x00\x00\x01\xf8\x00\x00\x00\x01\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x03\xf0\x00\x00\x00\x03\xf0\x00\x00\x00\x07\xf0\x00\x00\x00\x07\xe0\x00\x00\x00\x07\xe0\x00\x00\x00\x0f\xe0\x00\x00\x00\x0f\xe0\x00\x00\x00\x0f\xc0\x00\x00\x00\x0f\xc0\x00\x00\x00\x1f\xc0\x00\x00\x00\x1f\xc0\x00\x00\x00\x1f\xc0\x00\x00\x00\x1f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x80\x00\x00\x00\x3f\x00\x00\x00\x00\x3f\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x7f\x00\x00\x00")
},{
    'x': 33, 'y': 52,
    'b': bytearray(b"\x00\x00\x80\x00\x00\x00\x3f\xfe\x00\x00\x00\xff\xff\x80\x00\x03\xff\xff\xc0\x00\x07\xff\xff\xf0\x00\x0f\xff\xff\xf0\x00\x1f\xf8\x0f\xf8\x00\x1f\xe0\x07\xfc\x00\x3f\xc0\x03\xfc\x00\x3f\x80\x01\xfe\x00\x3f\x80\x00\xfe\x00\x3f\x80\x00\xfe\x00\x3f\x00\x00\xfe\x00\x3f\x00\x00\xfe\x00\x3f\x00\x00\xfe\x00\x3f\x00\x00\xfe\x00\x3f\x80\x00\xfe\x00\x3f\x80\x00\xfe\x00\x3f\x80\x01\xfc\x00\x1f\xc0\x03\xfc\x00\x0f\xe0\x07\xf8\x00\x07\xf8\x1f\xf0\x00\x03\xff\xff\xe0\x00\x01\xff\xff\x80\x00\x00\x7f\xfe\x00\x00\x00\xff\xff\x80\x00\x03\xff\xff\xe0\x00\x07\xfe\x3f\xf0\x00\x0f\xf0\x07\xf8\x00\x1f\xc0\x01\xfc\x00\x3f\x80\x00\xfe\x00\x7f\x00\x00\xfe\x00\x7f\x00\x00\x7f\x00\x7e\x00\x00\x7f\x00\xfe\x00\x00\x3f\x00\xfe\x00\x00\x3f\x00\xfe\x00\x00\x3f\x80\xfe\x00\x00\x3f\x80\xfe\x00\x00\x3f\x00\xfe\x00\x00\x3f\x00\xfe\x00\x00\x7f\x00\x7f\x00\x00\x7f\x00\x7f\x00\x00\xff\x00\x7f\x80\x01\xfe\x00\x3f\xc0\x03\xfe\x00\x3f\xf0\x0f\xfc\x00\x1f\xff\xff\xf8\x00\x0f\xff\xff\xf0\x00\x07\xff\xff\xe0\x00\x01\xff\xff\xc0\x00\x00\x7f\xfe\x00\x00\x00\x01\x80\x00\x00")
},{
    'x':32, 'y': 52,
    'b': bytearray(b"\x00\x01\x00\x00\x00\x3f\xfc\x00\x00\xff\xff\x00\x03\xff\xff\xc0\x07\xff\xff\xe0\x0f\xff\xff\xf0\x1f\xf8\x1f\xf0\x1f\xe0\x07\xf8\x3f\xc0\x03\xfc\x3f\x80\x01\xfc\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7e\x00\x00\xfe\xfe\x00\x00\x7e\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\xfe\x00\x00\x7f\x7f\x00\x00\x7f\x7f\x00\x00\xff\x7f\x80\x00\xff\x3f\xc0\x01\xff\x3f\xe0\x07\xff\x1f\xfc\x7f\xff\x0f\xff\xff\xff\x07\xff\xff\x7f\x03\xff\xfe\x7f\x00\xff\xfc\x7f\x00\x1f\xe0\x7f\x00\x00\x00\x7f\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x00\xfe\x00\x00\x01\xfc\x00\x00\x01\xfc\x00\x00\x03\xf8\x00\x00\x07\xf8\x04\x00\x0f\xf0\x07\x00\x3f\xf0\x07\xff\xff\xe0\x07\xff\xff\xc0\x0f\xff\xff\x00\x0f\xff\xfe\x00\x01\xff\xf8\x00\x00\x06\x00\x00")
}]

fbdot = framebuf.FrameBuffer(bytearray(b"\xfe\xfe\xfe\xfe\xfe\xfe\xfe"), 7, 7, framebuf.MONO_HLSB)

class SCREEN:
    def __init__(self):
        self.oled_width = 128
        oled_height = 64
        self.oled = ssd1306.SSD1306_I2C(self.oled_width, oled_height, machine.I2C(0,sda=machine.Pin(0), scl=machine.Pin(1), freq=400000))


    def display(self, num):
        left = digits[int(num *10 % 10 // 1)]
        middle = digits[int(num % 10 // 1)]
        right_int = int(num /10 % 10 // 1)

        self.oled.fill(0)
        self.oled.blit(framebuf.FrameBuffer(left['b'], left['x'], left['y'], framebuf.MONO_HLSB), self.oled_width - 36, 0)
        self.oled.blit(fbdot, self.oled_width - 36 - 8, 52-8)
        self.oled.blit(framebuf.FrameBuffer(middle['b'], middle['x'], middle['y'], framebuf.MONO_HLSB), self.oled_width - 36 - 8 - 2 - middle['x'], 0)
        if (right_int > 0):
            right = digits[right_int]
            self.oled.blit(framebuf.FrameBuffer(right['b'], right['x'], right['y'], framebuf.MONO_HLSB), self.oled_width - 36 - 8 - 2 - middle['x'] - middle['x'], 0)

        if (num > 5):
            if (num < 10): 
                self.oled.text('Slow coach', self.oled_width - (8 * 10), 55)
            else:
                if (num < 20):
                    self.oled.text('Speedyyyy', self.oled_width - (8 * 10), 55)
                else:
                    self.oled.text('!! SLOW DOWN !!', self.oled_width - (8 * 15), 55)

        self.oled.show()


    def test(self):

        speed = 0.0
        while speed <30:
            self.display(speed)
            #utime.sleep_ms(5)
            speed = speed + 0.3

        while speed >= 0:
            self.display(speed)
            #utime.sleep_ms(5)
            speed = speed - 0.3
        
        self.display(0)





